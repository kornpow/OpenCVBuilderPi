# base-image for python on any machine using a template variable,
# see more about dockerfile templates here:http://docs.resin.io/pages/deployment/docker-templates
#1
FROM resin/rpi-raspbian:latest


RUN rm /bin/sh && ln -s /bin/bash /bin/sh

# use apt-get if you need to install dependencies,
# for instance if you need ALSA sound utils, just uncomment the lines below.
#2
RUN apt-get update && apt-get install -yq \
build-essential cmake pkg-config \
libjpeg-dev libtiff5-dev libjasper-dev libpng12-dev \
libavcodec-dev libavformat-dev libswscale-dev libv4l-dev \
libxvidcore-dev libx264-dev \
libgtk2.0-dev \
libatlas-base-dev gfortran \
python2.7-dev python3-dev \
 && rm -rf /var/lib/apt/lists/*

RUN apt-get update && apt-get install -yq \
wget unzip\
 && rm -rf /var/lib/apt/lists/*

# Set our working directory
#3
WORKDIR /usr/src/app

COPY ./get-pip.py /get-pip.py
RUN python3 /get-pip.py 


COPY ./requirements.txt /requirements.txt

RUN pip3 install -Ur /requirements.txt

COPY ./opencv-3.3.1.zip /opencv-3.3.1.zip
RUN unzip -q opencv-3.3.1.zip

WORKDIR /usr/src/app/opencv-3.3.1

RUN mkdir build

WORKDIR /usr/src/app/opencv-3.3.1/build

RUN cmake -D CMAKE_BUILD_TYPE=RELEASE \
    -D CMAKE_INSTALL_PREFIX=/usr/local \
    -D INSTALL_PYTHON_EXAMPLES=ON \
    -D BUILD_EXAMPLES=ON ..

RUN make -j8

RUN make install
RUN ldconfig


  


#10
WORKDIR /usr/src/app/


# switch on systemd init system in container
#12
ENV INITSYSTEM on

# main.py will run when container starts up on the device
#13
CMD ["bash", "start"]
